{"version":3,"file":"component---src-pages-company-jobs-create-js-c686b9d23bd188aba3e4.js","mappings":"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","sources":["webpack://quick-intern/./src/components/layouts/CompanyNavbar.js","webpack://quick-intern/./src/components/layouts/CompanyLayout.js","webpack://quick-intern/./src/components/forms/jobs/CreateJob.js","webpack://quick-intern/./src/pages/company/jobs/create.js"],"sourcesContent":["import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\nconst isActive = ({ isCurrent }) => {\r\n  return isCurrent\r\n    ? { className: 'nav-link active' }\r\n    : { className: 'nav-link' }\r\n}\r\n\r\nconst ExactNavLink = props => <Link getProps={isActive} {...props} />\r\n\r\nconst CompanyNavbar = ({ siteTitle }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand-md navbar-dark bg-primary'>\r\n      <div className='container-fluid'>\r\n        <Link to='/' className='navbar-brand' href='#'>\r\n          {`${siteTitle} | Company`}\r\n        </Link>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-bs-toggle='collapse'\r\n          data-bs-target='#main-navbar'\r\n          aria-controls='main-navbar'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n        >\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n\r\n        <div className='collapse navbar-collapse d-flex justify-content-end' id='main-navbar'>\r\n          <ul className='navbar-nav mb-2 mb-md-0'>\r\n            <li className='nav-item'>\r\n              <ExactNavLink to='/company'>Home</ExactNavLink>\r\n            </li>\r\n            <li className='nav-item dropdown'>\r\n              <a\r\n                className='nav-link dropdown-toggle'\r\n                href='#'\r\n                role='button'\r\n                data-bs-toggle='dropdown'\r\n                aria-expanded='false'\r\n              >\r\n                My Account\r\n              </a>\r\n              <ul className='dropdown-menu'>\r\n                <li>\r\n                  <Link to=\"/\" className='dropdown-item' href='#'>\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nCompanyNavbar.propTypes = {\r\n  siteTitle: PropTypes.string\r\n}\r\n\r\nCompanyNavbar.defaultProps = {\r\n  siteTitle: ''\r\n}\r\n\r\nexport default CompanyNavbar\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport '../layout.scss'\r\nimport CompanyNavbar from './CompanyNavbar'\r\n\r\nconst CompanyLayout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query CompanySiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <div className='container-fluid p-0'>\r\n      <CompanyNavbar siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main className='container-lg'>{children}</main>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanyLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default CompanyLayout\r\n","import { addMonths, addWeeks, subYears } from 'date-fns'\r\nimport { Link } from 'gatsby'\r\nimport React, { useReducer, useState } from 'react'\r\nimport { genericReducer } from '../../../utils/form-utils'\r\nimport DateField from '../fields/DateField'\r\nimport FormButton from '../fields/FormButton'\r\nimport TextField from '../fields/TextField'\r\n\r\nconst CreateJob = () => {\r\n  const [companyRegistrationFields, dispatch] = useReducer(genericReducer, {\r\n    title: '',\r\n    description: '',\r\n    industry: '',\r\n    country: '',\r\n    location: '',\r\n    activeFrom: new Date(),\r\n    activeTo: addWeeks(new Date(), 1)\r\n  })\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    industry,\r\n    country,\r\n    location,\r\n    activeFrom,\r\n    activeTo\r\n  } = companyRegistrationFields\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleChange = (event, callback) => {\r\n    callback({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    setIsLoading(true)\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='p-0 d-flex justify-content-center'>\r\n        <form method='POST' onSubmit={handleSubmit} className='w-75'>\r\n          <TextField\r\n            label='Job Title:'\r\n            id='title'\r\n            placeholder='e.g. Tester'\r\n            inputProps={{\r\n              inputMode: 'text',\r\n              required: true,\r\n              value: title,\r\n              maxLength: 255,\r\n              minLength: 2,\r\n              pattern: `.*[a-zA-Z].*$`,\r\n              onInput: e => handleChange(e, dispatch),\r\n              tabIndex: 1\r\n            }}\r\n          />\r\n          <TextField\r\n            label='Job Description'\r\n            id='description'\r\n            placeholder='e.g. we are looking for'\r\n            inputProps={{\r\n              inputMode: 'text',\r\n              required: true,\r\n              value: description,\r\n              maxLength: 255,\r\n              minLength: 2,\r\n              pattern: `.*[a-zA-Z].*$`,\r\n              onInput: e => handleChange(e, dispatch),\r\n              tabIndex: 2\r\n            }}\r\n          />\r\n          <TextField\r\n            label='Industry'\r\n            id='industry'\r\n            placeholder='e.g. Telecommunication'\r\n            inputProps={{\r\n              inputMode: 'text',\r\n              required: true,\r\n              value: industry,\r\n              maxLength: 255,\r\n              minLength: 2,\r\n              pattern: `.*[a-zA-Z].*$`,\r\n              onInput: e => handleChange(e, dispatch),\r\n              tabIndex: 2\r\n            }}\r\n          />\r\n          <TextField\r\n            label='Country:'\r\n            id='country'\r\n            placeholder='e.g. Ghana'\r\n            inputProps={{\r\n              inputMode: 'text',\r\n              required: true,\r\n              value: country,\r\n              maxLength: 255,\r\n              minLength: 2,\r\n              pattern: `.*[a-zA-Z\\\\s\\\\-].*$`,\r\n              onInput: e => handleChange(e, dispatch),\r\n              tabIndex: 3\r\n            }}\r\n          />\r\n          <TextField\r\n            label='Location:'\r\n            id='location'\r\n            placeholder='e.g. Accra'\r\n            inputProps={{\r\n              inputMode: 'text',\r\n              required: true,\r\n              value: location,\r\n              maxLength: 255,\r\n              minLength: 2,\r\n              pattern: `.*[a-zA-Z\\\\s\\\\-].*$`,\r\n              onInput: e => handleChange(e, dispatch),\r\n              tabIndex: 3\r\n            }}\r\n          />\r\n          <DateField\r\n            label='From:'\r\n            id='activeFrom'\r\n            inputProps={{\r\n              selected: activeFrom,\r\n              onChange: newDate =>\r\n                dispatch({\r\n                  activeFrom: newDate\r\n                }),\r\n              minDate: new Date(),\r\n              tabIndex: 4\r\n            }}\r\n          />\r\n          <DateField\r\n            label='To:'\r\n            id='activeTo'\r\n            inputProps={{\r\n              selected: activeTo,\r\n              onChange: newDate =>\r\n                dispatch({\r\n                  activeTo: newDate\r\n                }),\r\n              maxDate: addMonths(new Date(), 6),\r\n              tabIndex: 4\r\n            }}\r\n          />\r\n          <FormButton title='Upload Job' isLoading={isLoading} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateJob\r\n","import * as React from 'react'\r\nimport CreateJob from '../../../components/forms/jobs/CreateJob'\r\n\r\nimport CompanyLayout from '../../../components/layouts/CompanyLayout'\r\nimport Seo from '../../../components/seo'\r\n\r\nconst CompanyHomePage = () => (\r\n  <CompanyLayout>\r\n    <Seo title='Company | Home' />\r\n    <h1 className='h3 p-5 text-center'>Upload a job</h1>\r\n    <CreateJob />\r\n  </CompanyLayout>\r\n)\r\n\r\nexport default CompanyHomePage\r\n"],"names":["isActive","isCurrent","className","ExactNavLink","props","Link","getProps","CompanyNavbar","siteTitle","to","href","type","id","role","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","useReducer","genericReducer","description","industry","country","location","activeFrom","Date","activeTo","addWeeks","companyRegistrationFields","dispatch","useState","isLoading","setIsLoading","handleChange","event","callback","target","name","value","method","onSubmit","preventDefault","TextField","label","placeholder","inputProps","inputMode","required","maxLength","minLength","pattern","onInput","e","tabIndex","DateField","selected","onChange","newDate","minDate","maxDate","addMonths","FormButton","CompanyLayout"],"sourceRoot":""}