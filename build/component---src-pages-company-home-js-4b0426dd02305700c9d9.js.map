{"version":3,"file":"component---src-pages-company-home-js-4b0426dd02305700c9d9.js","mappings":"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","sources":["webpack://quick-intern/./src/data/sampleJobs.js","webpack://quick-intern/./src/components/shared/Loader.js","webpack://quick-intern/./src/components/jobs/JobListItem.js","webpack://quick-intern/./src/components/jobs/JobList.js","webpack://quick-intern/./src/components/layouts/CompanyNavbar.js","webpack://quick-intern/./src/components/layouts/CompanyLayout.js","webpack://quick-intern/./src/pages/company/home.js"],"sourcesContent":["export const sampleJobData = [\r\n  {\r\n    title: 'Sample Job 1',\r\n    description: 'A sample job',\r\n    company: 'Sample Company 1',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Kumasi',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 2',\r\n    description: 'Another sample job',\r\n    company: 'Sample Startup 1',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Remote',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 3',\r\n    description: 'A sample job',\r\n    company: 'Sample Company 1',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Cape Coast',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 4',\r\n    description: 'Another sample job',\r\n    company: 'Sample Company 2',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Remote',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 5',\r\n    description: 'Another sample job',\r\n    company: 'Sample Company 1',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Tema',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 6',\r\n    description: 'A sample job',\r\n    company: 'Sample Startup 1',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Tamale',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 7',\r\n    description: 'Another sample job',\r\n    company: 'Sample Startup 2',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Accra',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  },\r\n  {\r\n    title: 'Sample Job 8',\r\n    description: 'Another sample job',\r\n    company: 'Sample Company 1',\r\n    industry: 'Testing',\r\n    country: 'Ghana',\r\n    location: 'Remote',\r\n    activeFrom: new Date(),\r\n    activeTo: new Date()\r\n  }\r\n]\r\n","import * as React from 'react'\r\n\r\nconst Loader = ({ loadingText }) => {\r\n  return (\r\n    <div className='text-center p-5'>\r\n      <div className='spinner-border' role='status'>\r\n        <span className='visually-hidden'>{loadingText}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoader.defaultProps = {\r\n  loadingText: `Loading...`\r\n}\r\n\r\nexport default Loader\r\n","import { format } from 'date-fns'\r\nimport * as React from 'react'\r\n\r\nconst JobListItem = ({ title, company, description, createdOn }) => {\r\n  return (\r\n    <div className='list-group-item list-group-item-action py-3 my-1 border-start-0 border-end-0'>\r\n      <div className='d-flex w-100 justify-content-between'>\r\n        <h5 className='mb-2 fw-semibold'>{title}</h5>\r\n        <small>{format(createdOn, 'MMMM d, yyyy')}</small>\r\n      </div>\r\n      <p className='mb-1'>{company}</p>\r\n      <small>{description}</small>\r\n    </div>\r\n  )\r\n}\r\n\r\nJobListItem.defaultProps = {\r\n  title: 'Uploaded Jobs'\r\n}\r\n\r\nexport default JobListItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { sampleJobData } from '../../data/sampleJobs'\r\nimport Loader from '../shared/Loader'\r\nimport JobListItem from './JobListItem'\r\n\r\nconst JobList = ({ title }) => {\r\n  const [jobs, setJobs] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setJobs(sampleJobData)\r\n    setIsLoading(false)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='p-5'>\r\n      <p className='h-5 bold'>{title}</p>\r\n\r\n      {isLoading && <Loader />}\r\n\r\n      {!isLoading && (\r\n        <>\r\n          <div className='list-group border border-0'>\r\n            {jobs.map(\r\n              ({\r\n                title,\r\n                description,\r\n                company,\r\n                industry,\r\n                country,\r\n                location,\r\n                activeFrom\r\n              }) => (\r\n                <JobListItem\r\n                  title={title}\r\n                  company={company}\r\n                  description={description}\r\n                  createdOn={activeFrom}\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nJobList.defaultProps = {\r\n  title: 'Uploaded Jobs'\r\n}\r\n\r\nexport default JobList\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\nconst isActive = ({ isCurrent }) => {\r\n  return isCurrent\r\n    ? { className: 'nav-link active' }\r\n    : { className: 'nav-link' }\r\n}\r\n\r\nconst ExactNavLink = props => <Link getProps={isActive} {...props} />\r\n\r\nconst CompanyNavbar = ({ siteTitle }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand-md navbar-dark bg-primary'>\r\n      <div className='container-fluid'>\r\n        <Link to='/' className='navbar-brand' href='#'>\r\n          {`${siteTitle} | Company`}\r\n        </Link>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-bs-toggle='collapse'\r\n          data-bs-target='#main-navbar'\r\n          aria-controls='main-navbar'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n        >\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n\r\n        <div className='collapse navbar-collapse d-flex justify-content-end' id='main-navbar'>\r\n          <ul className='navbar-nav mb-2 mb-md-0'>\r\n            <li className='nav-item'>\r\n              <ExactNavLink to='/company'>Home</ExactNavLink>\r\n            </li>\r\n            <li className='nav-item dropdown'>\r\n              <a\r\n                className='nav-link dropdown-toggle'\r\n                href='#'\r\n                role='button'\r\n                data-bs-toggle='dropdown'\r\n                aria-expanded='false'\r\n              >\r\n                My Account\r\n              </a>\r\n              <ul className='dropdown-menu'>\r\n                <li>\r\n                  <Link to=\"/\" className='dropdown-item' href='#'>\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nCompanyNavbar.propTypes = {\r\n  siteTitle: PropTypes.string\r\n}\r\n\r\nCompanyNavbar.defaultProps = {\r\n  siteTitle: ''\r\n}\r\n\r\nexport default CompanyNavbar\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport '../layout.scss'\r\nimport CompanyNavbar from './CompanyNavbar'\r\n\r\nconst CompanyLayout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query CompanySiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <div className='container-fluid p-0'>\r\n      <CompanyNavbar siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main className='container-lg'>{children}</main>\r\n    </div>\r\n  )\r\n}\r\n\r\nCompanyLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default CompanyLayout\r\n","import { Link } from 'gatsby'\r\nimport * as React from 'react'\r\nimport JobList from '../../components/jobs/JobList'\r\n\r\nimport CompanyLayout from '../../components/layouts/CompanyLayout'\r\nimport Seo from '../../components/seo'\r\n\r\nconst CompanyHomePage = () => (\r\n  <CompanyLayout>\r\n    <Seo title='Company | Home' />\r\n    <h1 className='h3 p-5 text-center'>\r\n      Welcome to Assisted Intern, you can now upload job vacancies in your\r\n      company in order to reach persons who best fit these vacancies​\r\n    </h1>\r\n\r\n    <div className='text-center pb-3'>\r\n      <Link to='/company/jobs/create' className='btn btn-secondary py-3 px-5'>\r\n        Upload a Job\r\n      </Link>\r\n    </div>\r\n\r\n    <JobList title='Your Uploaded Jobs' />\r\n  </CompanyLayout>\r\n)\r\n\r\nexport default CompanyHomePage\r\n"],"names":["sampleJobData","title","description","company","industry","country","location","activeFrom","Date","activeTo","Loader","loadingText","className","role","defaultProps","JobListItem","createdOn","format","JobList","useState","jobs","setJobs","isLoading","setIsLoading","useEffect","map","isActive","isCurrent","ExactNavLink","props","Link","getProps","CompanyNavbar","siteTitle","to","href","type","id","children","data","useStaticQuery","site","siteMetadata"],"sourceRoot":""}